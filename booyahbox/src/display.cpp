// src/display.cpp
#include "display.h"
#include "hardware/i2c.h"
#include "hardware/gpio.h"
#include "pico/stdlib.h"

#include "ssd1306.h"
#include "textRenderer/TextRenderer.h"

#include "socd.h"     // pour SOCDStrategy & apply_socd_strategy()
#include "menu.h"     // contient PAGE_*, MODE_*, currentPage, currentMode

using namespace pico_ssd1306;

const uint8_t logo16x16[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 
    0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
    0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
    0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
    0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
    0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
    0x3f, 0xe0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xfc, 
    0x3f, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfc, 
    0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfc, 
    0x7f, 0x80, 0x00, 0x1c, 0x00, 0x00, 0x7f, 0xfc, 0x3f, 0xfe, 0x00, 0x00, 0x1c, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x3e, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3e, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x1c, 0x7f, 0x1c, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x1c, 0x7f, 0x1c, 0x01, 0xfe, 
    0x7f, 0x80, 0x3e, 0x7f, 0x3e, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x3e, 0x7f, 0x3e, 0x01, 0xfe, 
    0x7f, 0x80, 0x7f, 0x7f, 0x7f, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0x7f, 0x7f, 0x01, 0xfe, 
    0x7f, 0x80, 0x7f, 0x3e, 0x7f, 0x00, 0x03, 0xff, 0xff, 0xc0, 0x1c, 0x7f, 0x3e, 0x7f, 0x01, 0xfe, 
    0x7f, 0x80, 0x7f, 0x1c, 0x7f, 0x00, 0x01, 0xff, 0xff, 0x80, 0x3e, 0x7f, 0x1c, 0x7f, 0x01, 0xfe, 
    0x7f, 0x80, 0x3e, 0x00, 0x3e, 0x00, 0x00, 0xff, 0xff, 0x00, 0x7f, 0x3e, 0x00, 0x3e, 0x01, 0xfe, 
    0x7f, 0x80, 0x1c, 0x00, 0x1c, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x7f, 0x1c, 0x00, 0x1c, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x7f, 0x00, 0x07, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x3e, 0x00, 0x0f, 0x80, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x1c, 0x07, 0x1f, 0xc7, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x0f, 0x9f, 0xcf, 0x81, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x00, 0x1f, 0xdf, 0xdf, 0xc1, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x07, 0x1f, 0xcf, 0x9f, 0xc1, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf8, 0x00, 0x0f, 0x9f, 0xc7, 0x1f, 0xc1, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x38, 0x00, 0x3f, 0xfc, 0x00, 0x1f, 0xcf, 0x80, 0x0f, 0x81, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x7f, 0xfe, 0x00, 0x1f, 0xc7, 0x00, 0x07, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0xfe, 0x00, 0xff, 0xff, 0x00, 0x1f, 0xc0, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0xfe, 0x01, 0xff, 0xff, 0x80, 0x0f, 0x80, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0xfe, 0x03, 0xff, 0xff, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x7c, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x38, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 
    0x7f, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfc, 0x3f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 
    0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf8, 0x1f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x03, 0xfc, 
    0x3f, 0xc0, 0x00, 0x00, 0x00, 0x01, 0xff, 0xf0, 0x0f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfc, 
    0x3f, 0xf0, 0x00, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x07, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xfc, 
    0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
    0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 
    0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 
    0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
    0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 
    0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 
    0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
    0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 
    0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
    0x00, 0x00, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Pas d’objet global, on crée en runtime
static SSD1306* disp_ptr = nullptr;

// Splash management
static absolute_time_t splash_start;
static bool            splash_done = false;

// Initialisation de l’écran (Core 1)
void init_display() {
    // 1) I²C GP0/GP1
    i2c_init(i2c0, 400000);
    gpio_set_function(SDA_PIN, GPIO_FUNC_I2C);
    gpio_set_function(SCL_PIN, GPIO_FUNC_I2C);
    gpio_pull_up(SDA_PIN);
    gpio_pull_up(SCL_PIN);

    // 2) Création de l’objet SSD1306
    static SSD1306 disp(i2c0, OLED_ADDR, Size::W128xH64);
    disp.clear();
    disp.sendBuffer();
    disp_ptr = &disp;

    // 3) Démarrage du splash
    splash_start = get_absolute_time();
}

void display_task() {
    if (!disp_ptr) return;

    // 1) Gestion du splash screen (3 s)
    auto now = get_absolute_time();
    if (!splash_done &&
        absolute_time_diff_us(splash_start, now) < 3 * 1000000) {
        disp_ptr->clear();
        drawText(disp_ptr, font_12x16, "BOOYAHBOX", 16, 24);
        disp_ptr->sendBuffer();
        return;
    }
    splash_done = true;

    // 2) Affichage de la page active
    disp_ptr->clear();
    switch (currentPage) {
        case PAGE_SPLASH:
           
            // Affiche le logo
            disp_ptr->addBitmapImage(0, 0, 128, 64, (uint8_t*)logo16x16);
            break;

        case PAGE_SOCD:
            // Titre
            drawText(disp_ptr, font_8x8, "Mode SOCD:", 0, 0);

            // Itère sur chaque stratégie
            for (uint8_t i = 0; i < SOCD_COUNT; i++) {
                int y = 12 + i * 12;  // ligne i à 12 px d'écart
                // Curseur '>' si sélectionnée
                if ((uint8_t)current_socd_strategy == i) {
                    drawText(disp_ptr, font_8x8, ">", 0, y);
                }
                // Label à droite du curseur
                drawText(disp_ptr, font_8x8, socd_labels[i], 8, y);
            }
            break;

        case PAGE_INPUT:
            drawText(disp_ptr, font_8x8, "Input View:", 0, 0);
            // TODO: dessiner ici vos cercles pleins/vide
            break;

        default:
            break;
    }

    // 3) Flèches de navigation (mode config uniquement)
    if (currentMode == MODE_CONFIG) {
        drawText(disp_ptr, font_5x8, "< >", 54, 56);
    }

    disp_ptr->sendBuffer();
}
